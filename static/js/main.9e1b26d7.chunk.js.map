{"version":3,"sources":["utils/constant.js","utils/ARToolKitHandler.js","components/SceneRenderer.jsx","utils/PropChecking.js","components/AFrameRenderer.jsx","utils/useAsync.jsx","utils/useScript.jsx","utils/useEventListener.jsx","utils/useWindowDimension.jsx","components/ARProvider.jsx","utils/AnimationHandler.js","components/Box.jsx","components/Entity.jsx","components/Marker.jsx","utils/MarkerHandler.js","Example.jsx","index.js"],"names":["PARAMETERS","ANIMATION_PROPERTIES","prepareToolKitParams","parameters","toolKitParams","_","forEach","value","index","includes","SceneRenderer","arToolKit","getSceneRef","inherent","renderer","children","rest","ref","sceneRef","passSceneRef","current","embedded","arjs","animationPropType","PropTypes","exact","detectionMode","oneOf","matrixCodeType","instanceOf","cameraParametersUrl","string","maxDetectionRate","number","sourceType","sourceUrl","sourceHeight","sourceWidth","displayHeight","displayWidth","canvasHeight","canvasWidth","trackingMethod","debugUIEnabled","bool","func","property","from","to","delay","dir","dur","easing","elasticity","loop","round","autoplay","enabled","boxPropType","shape","type","size","patternUrl","url","barcodeValue","changeMatrixMode","minConfidence","preset","markerhelpers","color","material","position","scale","animation","AFrameRenderer","assign","geometry","props","container","document","body","useRef","component","ReactDOM","createPortal","renderVirtualComponent","defaultProps","useAsync","callback","useState","isLoading","setIsLoading","error","setError","setValue","callbackRef","callbackMemoization","useCallback","undefined","then","catch","finally","useEffect","useScript","element","script","createElement","src","async","head","appendChild","Promise","resolve","reject","addEventListener","useEventListener","types","window","handler","e","removeEventListener","getWindowDimension","width","innerWidth","height","innerHeight","useWindowDimension","ARContext","createContext","ARProvider","windowSize","arFrameLoading","arLoading","Provider","getAnimations","animationParams","Box","omit","Entity","Marker","isCustomMarker","Example","scene","stats"],"mappings":"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","file":"static/js/main.9e1b26d7.chunk.js","sourcesContent":["export const PARAMETERS = [\r\n  // Core config\r\n  'detectionMode',\r\n  'matrixCodeType',\r\n  'cameraParametersUrl',\r\n  'maxDetectionRate',\r\n\r\n  // Source configuration\r\n  'sourceType',\r\n  'sourceUrl',\r\n  'sourceWidth',\r\n  'sourceHeight',\r\n\r\n  // Canvas dimensions\r\n  'displayHeight',\r\n  'displayWidth',\r\n  'canvasWidth',\r\n  'canvasHeight',\r\n\r\n  // Tracking module ['tango', 'artoolkit', 'best']\r\n  'trackingMethod',\r\n  'areaLearningButton',\r\n  'performanceProfile',\r\n  'tangoPointCloudEnabled',\r\n  'debugUIEnabled',\r\n];\r\n\r\nexport const SOURCE_TYPE = ['webcam', 'image', 'video'];\r\n\r\nexport const DETECTION_MODE = [\r\n  'color',\r\n  'color_and_matrix',\r\n  'mono',\r\n  'mono_and_matrix',\r\n];\r\n\r\nexport const MATRIX_CODE_TYPE = [\r\n  '3x3',\r\n  '3x3_HAMMING63',\r\n  '3x3_PARITY65',\r\n  '4x4',\r\n  '4x4_BCH_13_9_3',\r\n  '4x4_BCH_13_5_5',\r\n];\r\n\r\nexport const TRACKING_METHOD = ['tango', 'artoolkit', 'best'];\r\n\r\nexport const ANIMATION_PROPERTIES = [\r\n  'property',\r\n  'isRawProperty',\r\n  'from',\r\n  'to',\r\n  'type',\r\n  'delay',\r\n  'dir',\r\n  'dur',\r\n  'easing',\r\n  'elasticity',\r\n  'loop',\r\n  'round',\r\n  'startEvents',\r\n  'pauseEvents',\r\n  'resumeEvents',\r\n  'autoplay',\r\n  'enabled',\r\n];\r\n","import _ from 'lodash';\r\nimport ReactDOM from 'react-dom';\r\nimport { PARAMETERS } from './constant';\r\n\r\nexport const prepareToolKitParams = (parameters) => {\r\n  let toolKitParams = '';\r\n\r\n  _.forEach(parameters, (value, index) => {\r\n    if (_.includes(PARAMETERS, index))\r\n      toolKitParams += `${index}: ${parameters[index]};`;\r\n  });\r\n\r\n  return toolKitParams;\r\n};\r\n\r\nexport const passSceneRef = (getSceneRef, ref) => getSceneRef(ref) || ref;\r\n\r\nexport const inherentMode = (value) => (value ? <a-camera-static /> : null);\r\n\r\nexport const renderVirtualComponent = (component, container) =>\r\n  ReactDOM.createPortal(component, container);\r\n","import React from 'react';\r\nimport {\r\n  prepareToolKitParams,\r\n  passSceneRef,\r\n  inherentMode,\r\n} from '../utils/ARToolKitHandler';\r\n\r\nconst SceneRenderer = ({\r\n  arToolKit,\r\n  getSceneRef,\r\n  inherent,\r\n  renderer,\r\n  children,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <a-scene\r\n      ref={(sceneRef) => {\r\n        passSceneRef(getSceneRef, sceneRef);\r\n        renderer.current = sceneRef;\r\n      }}\r\n      embedded\r\n      arjs={prepareToolKitParams(arToolKit)}\r\n      {...rest}\r\n      vr-mode-ui=\"enabled: false\"\r\n    >\r\n      {inherentMode(inherent)}\r\n      {children}\r\n    </a-scene>\r\n  );\r\n};\r\n\r\nexport default SceneRenderer;\r\n","import _ from 'lodash';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  DETECTION_MODE,\r\n  MATRIX_CODE_TYPE,\r\n  SOURCE_TYPE,\r\n  TRACKING_METHOD,\r\n} from './constant';\r\n\r\nexport const rendererPropsType = {\r\n  arToolKit: PropTypes.exact({\r\n    detectionMode: PropTypes.oneOf(DETECTION_MODE),\r\n    matrixCodeType: PropTypes.instanceOf(MATRIX_CODE_TYPE),\r\n    cameraParametersUrl: PropTypes.string,\r\n    maxDetectionRate: PropTypes.number,\r\n\r\n    sourceType: PropTypes.oneOf(SOURCE_TYPE),\r\n    sourceUrl: PropTypes.string,\r\n    sourceHeight: PropTypes.number,\r\n    sourceWidth: PropTypes.number,\r\n\r\n    displayHeight: PropTypes.number,\r\n    displayWidth: PropTypes.number,\r\n    canvasHeight: PropTypes.number,\r\n    canvasWidth: PropTypes.number,\r\n\r\n    trackingMethod: PropTypes.oneOf(TRACKING_METHOD),\r\n    debugUIEnabled: PropTypes.bool,\r\n  }),\r\n  getSceneRef: PropTypes.func,\r\n  inherent: PropTypes.bool,\r\n  stats: PropTypes.bool,\r\n};\r\n\r\nexport const animationPropType = {\r\n  property: PropTypes.string,\r\n  from: PropTypes.string,\r\n  to: PropTypes.string,\r\n  delay: PropTypes.number,\r\n  dir: PropTypes.oneOf(['normal', 'alternate', 'reverse']),\r\n  dur: PropTypes.string,\r\n  easing: PropTypes.string,\r\n  elasticity: PropTypes.number,\r\n  loop: PropTypes.bool,\r\n  round: PropTypes.bool,\r\n  autoplay: PropTypes.bool,\r\n  enabled: PropTypes.bool,\r\n};\r\n\r\nexport const markerPropType = {\r\n  parameters: PropTypes.shape({\r\n    type: PropTypes.string,\r\n    size: PropTypes.number,\r\n    patternUrl: PropTypes.string,\r\n    url: PropTypes.string,\r\n    barcodeValue: PropTypes.number,\r\n    changeMatrixMode: PropTypes.string,\r\n    minConfidence: PropTypes.number,\r\n    preset: PropTypes.string,\r\n    markerhelpers: PropTypes.bool,\r\n    'hit-testing-enabled': PropTypes.bool,\r\n    'hit-testing-renderDebug': PropTypes.bool,\r\n  }),\r\n  inherent: PropTypes.bool,\r\n};\r\n\r\nexport const boxPropType = {\r\n  color: PropTypes.string,\r\n  material: PropTypes.string,\r\n  position: PropTypes.string,\r\n  scale: PropTypes.string,\r\n  animation: PropTypes.shape(animationPropType),\r\n};\r\n\r\nexport const entityPropType = _.assign(boxPropType, {\r\n  'gltf-model': PropTypes.string,\r\n  geometry: PropTypes.string,\r\n});\r\n","import React, { useRef } from 'react';\r\nimport { renderVirtualComponent } from '../utils/ARToolKitHandler';\r\nimport SceneRenderer from './SceneRenderer';\r\nimport { rendererPropsType } from '../utils/PropChecking';\r\n\r\nconst AFrameRenderer = (props) => {\r\n  const container = document.body;\r\n  const renderer = useRef();\r\n\r\n  return renderVirtualComponent(\r\n    <SceneRenderer {...props} renderer={renderer} />,\r\n    container\r\n  );\r\n};\r\n\r\nAFrameRenderer.propTypes = rendererPropsType;\r\n\r\nAFrameRenderer.defaultProps = {\r\n  arToolKit: {},\r\n  getSceneRef: () => {},\r\n  inherent: true,\r\n};\r\n\r\nexport default AFrameRenderer;\r\n","import { useCallback, useRef, useEffect, useState } from 'react';\r\n\r\nconst useAsync = (callback) => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState();\r\n  const [value, setValue] = useState();\r\n\r\n  const callbackRef = useRef(callback);\r\n\r\n  const callbackMemoization = useCallback(() => {\r\n    setIsLoading(true);\r\n    setError(undefined);\r\n    setValue(undefined);\r\n    if (callbackRef) {\r\n      callbackRef\r\n        .current()\r\n        .then(setValue)\r\n        .catch(setError)\r\n        .finally(() => setIsLoading(false));\r\n    } else {\r\n      setIsLoading(false);\r\n    }\r\n  }, [callbackRef]);\r\n\r\n  useEffect(() => {\r\n    callbackMemoization();\r\n  }, [callbackMemoization]);\r\n\r\n  useEffect(() => {\r\n    callbackRef.current = callback;\r\n  }, [callback]);\r\n\r\n  return { isLoading, value, error };\r\n};\r\n\r\nexport default useAsync;\r\n","import useAsync from './useAsync';\r\n\r\nconst useScript = (url, element) => {\r\n  return useAsync(() => {\r\n    const script = document.createElement('script');\r\n    script.src = url;\r\n    script.async = true;\r\n\r\n    if (element) {\r\n      switch (element) {\r\n        case 'head':\r\n          document.head.appendChild(script);\r\n          break;\r\n\r\n        default:\r\n          document.body.appendChild(script);\r\n          break;\r\n      }\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n      script.addEventListener('load', resolve);\r\n      script.addEventListener('error', reject);\r\n    });\r\n  });\r\n};\r\n\r\nexport default useScript;\r\n","import { useEffect, useRef } from 'react';\r\n\r\nconst useEventListener = (types, callback, element = window) => {\r\n  const callbackRef = useRef(callback);\r\n\r\n  useEffect(() => {\r\n    callbackRef.current = callback;\r\n  }, [callback]);\r\n\r\n  useEffect(() => {\r\n    const handler = (e) => callbackRef.current(e);\r\n\r\n    if (!element) return;\r\n\r\n    element.addEventListener(types, handler);\r\n\r\n    return () => {\r\n      element.removeEventListener(types, handler);\r\n    };\r\n  }, [types, element]);\r\n};\r\n\r\nexport default useEventListener;\r\n","import { useState } from 'react';\r\nimport useEventListener from './useEventListener';\r\n\r\nconst getWindowDimension = () => {\r\n  const { innerWidth: width, innerHeight: height } = window;\r\n\r\n  return {\r\n    width,\r\n    height,\r\n  };\r\n};\r\n\r\nconst useWindowDimension = () => {\r\n  const [value, setValue] = useState(getWindowDimension);\r\n\r\n  useEventListener('resize', () => {\r\n    setValue(getWindowDimension);\r\n  });\r\n\r\n  return value;\r\n};\r\n\r\nexport default useWindowDimension;\r\n","import React, { createContext, useContext } from 'react';\r\nimport useScript from '../utils/useScript';\r\nimport useWindowDimension from '../utils/useWindowDimension';\r\n\r\nexport const ARContext = createContext();\r\n\r\nconst ARProvider = ({ children }) => {\r\n  const windowSize = useWindowDimension();\r\n\r\n  const { isLoading: arFrameLoading } = useScript(\r\n    'https://aframe.io/releases/1.2.0/aframe.min.js',\r\n    'head'\r\n  );\r\n  const { isLoading: arLoading } = useScript(\r\n    'https://raw.githack.com/AR-js-org/AR.js/master/aframe/build/aframe-ar.js',\r\n    'head'\r\n  );\r\n\r\n  return (\r\n    <ARContext.Provider\r\n      value={{\r\n        windowSize: windowSize,\r\n      }}\r\n    >\r\n      {!arFrameLoading && !arLoading && children}\r\n    </ARContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useARProvider = () => useContext(ARContext);\r\n\r\nexport default ARProvider;\r\n","import _ from 'lodash';\r\nimport { ANIMATION_PROPERTIES } from './constant';\r\n\r\nexport const getAnimations = (props) => {\r\n  let animationParams = '';\r\n\r\n  _.forEach(props, (value, index) => {\r\n    if (_.includes(ANIMATION_PROPERTIES, index))\r\n      animationParams += `${index}: ${props[index]};`;\r\n  });\r\n\r\n  return animationParams;\r\n};\r\n","import _ from 'lodash';\r\nimport React from 'react';\r\nimport { boxPropType } from '../utils/PropChecking';\r\nimport { getAnimations } from '../utils/AnimationHandler';\r\n\r\nconst Box = (props) => {\r\n  const animation = props.animation && getAnimations(props.animation);\r\n\r\n  return (\r\n    <a-box {..._.omit(props, ['children', 'animation'])} animation={animation}>\r\n      {props.children}\r\n    </a-box>\r\n  );\r\n};\r\n\r\nBox.propTypes = boxPropType;\r\n\r\nexport default Box;\r\n","import _ from 'lodash';\r\nimport React from 'react';\r\nimport { entityPropType } from '../utils/PropChecking';\r\nimport { getAnimations } from '../utils/AnimationHandler';\r\n\r\nconst Entity = (props) => {\r\n  const animation = props.animation && getAnimations(props.animation);\r\n\r\n  return (\r\n    <a-entity\r\n      {..._.omit(props, ['children', 'animation'])}\r\n      animation={animation}\r\n    >\r\n      {props.children}\r\n    </a-entity>\r\n  );\r\n};\r\n\r\nEntity.propTypes = entityPropType;\r\n\r\nexport default Entity;\r\n","import React from 'react';\r\nimport { isCustomMarker } from '../utils/MarkerHandler';\r\nimport { markerPropType } from '../utils/PropChecking';\r\n\r\nconst Marker = ({ parameters, inherent, children }) => {\r\n  isCustomMarker(parameters);\r\n\r\n  return inherent ? (\r\n    <a-marker {...parameters}>{children}</a-marker>\r\n  ) : (\r\n    <a-marker-camera {...parameters}>{children}</a-marker-camera>\r\n  );\r\n};\r\n\r\nMarker.propTypes = markerPropType;\r\n\r\nMarker.defaultProps = {\r\n  parameters: {},\r\n  inherent: true,\r\n};\r\n\r\nexport default Marker;\r\n","export const isCustomMarker = (parameters) => {\r\n  if (parameters !== undefined && parameters.preset === 'custom') {\r\n    parameters.url = parameters.patternUrl;\r\n\r\n    delete parameters.patternUrl;\r\n    return parameters;\r\n  }\r\n};\r\n","import React, { useRef } from 'react';\nimport AFrameRenderer from './components/AFrameRenderer';\nimport Marker from './components/Marker';\nimport Entity from './components/Entity';\n\nconst Example = () => {\n  const scene = useRef();\n\n  return (\n    <div>\n      <AFrameRenderer\n        arToolKit={{}}\n        stats\n        getSceneRef={(ref) => (scene.current = ref)}\n      >\n        <Marker parameters={{ preset: 'hiro' }}>\n          <Entity\n            material=\"color: red\"\n            gltf-model=\"https://arjs-cors-proxy.herokuapp.com/https://raw.githack.com/AR-js-org/AR.js/master/aframe/examples/image-tracking/nft/trex/scene.gltf\"\n            scale=\"0.02 0.02 0.02\"\n            position=\"0 0 -1\"\n            animation={{\n              property: 'rotation',\n              to: '0 360 0',\n              dur: '5000',\n              loop: true,\n            }}\n          ></Entity>\n        </Marker>\n      </AFrameRenderer>\n    </div>\n  );\n};\n\nexport default Example;\n","import AFrameRenderer from './components/AFrameRenderer';\r\nimport ARProvider from './components/ARProvider';\r\nimport Box from './components/Box';\r\nimport Entity from './components/Entity';\r\nimport Marker from './components/Marker';\r\nimport SceneRenderer from './components/SceneRenderer';\r\nimport Example from './Example';\r\n\r\nexport {\r\n  AFrameRenderer,\r\n  ARProvider,\r\n  Box,\r\n  Entity,\r\n  Marker,\r\n  SceneRenderer,\r\n};\r\n\r\nexport default Example;\r\n"],"sourceRoot":""}